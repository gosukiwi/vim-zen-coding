*zen-coding.txt*  Minimalist zencoding autocomplete

Author:  Federico Ramirez <https://github.com/gosukiwi/>
License: Same terms as Vim itself (see |license|)

Help on using zen-coding                                    *zencoding* *zen-coding*

    1. INTRODUCTION ................................. |zen-coding-intro|
    2. COMMANDS ..................................... |zen-coding-commands|
    3. MAPPINGS ..................................... |zen-coding-mappings|

================================================================================
 1. INTRODUCTION                                               *zen-coding-intro*

This plugin will autocomplete Emmet snippets. It is not a full Emmet
implementation. It only expands ids and classes. So no nesting tags.

Example usage:

  You type                                 You get ("_" represents the cursor)~
  ==============================================================================
  div<C-X><C-Space>                        <div>_</div>
  ------------------------------------------------------------------------------
  div.foo.bar<C-X><C-Space>                <div class="foo bar">_</div>
  ------------------------------------------------------------------------------
  div.foo.bar#baz<C-X><C-Space>            <div class="foo bar" id="baz">_</div>
  ------------------------------------------------------------------------------
  div<C-X><C-b>                            <div>
  ------------------------------------------------------------------------------
  div.foo<C-X><C-b>                        <div class="foo">
  ------------------------------------------------------------------------------
  div#bar#baz.foo<C-X><C-b>                <div class="foo" id="bar baz">
  ------------------------------------------------------------------------------

Note that in React files (filetypes matching /jsx|React/), it replaces `class`
with `className`, as well as adding `/` to self-closing tags:

  You type                                 You get ("_" represents the cursor)~
  ==============================================================================
  div.foo.bar<C-X><C-Space>                <div className="foo bar">_</div>
  ------------------------------------------------------------------------------
  div.foo.bar#baz<C-X><C-Space>            <div className="foo bar" id="baz">_</div>
  ------------------------------------------------------------------------------
  div<C-X><C-b>                            <div />
  ------------------------------------------------------------------------------
  div.foo<C-X><C-b>                        <div className="foo" />
  ------------------------------------------------------------------------------
  div#bar#baz.foo<C-X><C-b>                <div className="foo" id="bar baz" />
  ------------------------------------------------------------------------------

================================================================================
 2. COMMANDS                                                 *zen-coding-commands*

You can use the following commands to auto-complete the current line:

>
    :ZenCodingExpand
    :ZenCodingSelfClosingExpand
<

================================================================================
 3. MAPPINGS                                                 *zen-coding-mappings*

You can define your own mappings for expansion. By default, `<C-x><C-Space>`
will expand regular tags, and `<C-x><C-b>` will expand self-closing tags.

You can define your own mappings on top of it, for example, you might want a
mapping for invoking expansion in normal mode.

>
    nnoremap <silent> <my-mapping> :ZenCodingExpand<CR>
    nnoremap <silent> <my-mapping> :ZenCodingSelfClosingExpand<CR>
<

If you want to disable the default mappings, simply set
`g:zen_coding_disable_default_mappings` to 1 before loading the plugin.

>
    let g:zen_coding_disable_default_mappings = 1
    " load plugin
    inoremap <silent> <my-mapping> <C-O>:ZenCodingExpand<CR>
    inoremap <silent> <my-mapping> <C-O>:ZenCodingSelfClosingExpand<CR>
<

vim:tw=78:ts=8:ft=help:norl:
