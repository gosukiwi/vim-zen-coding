*zencoding.txt*  Minimalist zencoding autocomplete

Author: Federico Ramirez <https://github.com/gosukiwi/>
License: Same terms as Vim itself (see |license|)

Help on using zencoding                                                *zencoding* 

    1. INTRODUCTION ................................. |zencoding-intro|
    2. MAPPINGS ..................................... |zencoding-mappings|

================================================================================
 1. INTRODUCTION                                                 *zencoding-intro*

This plugin will autocomplete Emmet snippets. It is not a full Emmet
implementation. It only expands ids and classes. So no nesting tags.

Example usage:

  You type                                 You get ("_" represents the cursor)~
  ==============================================================================
  div<C-X><C-Space>                        <div>_</div>
  ------------------------------------------------------------------------------
  div.foo.bar<C-X><C-Space>                <div class="foo bar">_</div>
  ------------------------------------------------------------------------------
  div.foo.bar#baz<C-X><C-Space>            <div class="foo bar" id="baz">_</div>
  ------------------------------------------------------------------------------
  .foo<C-X><C-Space>                       <div class="foo">_</div>
  ------------------------------------------------------------------------------
  .foo#bar<C-X><C-Space>                   <div class="foo bar" id="baz">_</div>
  ------------------------------------------------------------------------------
  div<C-x><C-x><C-Space>                   <div>
  ------------------------------------------------------------------------------
  div.foo<C-x><C-x><C-Space>               <div class="foo">
  ------------------------------------------------------------------------------
  div#bar#baz.foo<C-x><C-x><C-Space>       <div class="foo" id="bar baz">
  ------------------------------------------------------------------------------

Note that in React files (filetypes matching /jsx|React/), it replaces `class`
with `className`, as well as adding `/` to self-closing tags:

  You type                                 You get ("_" represents the cursor)~
  ==============================================================================
  div.foo.bar<C-X><C-Space>                <div className="foo bar">_</div>
  ------------------------------------------------------------------------------
  div.foo.bar#baz<C-X><C-Space>            <div className="foo bar" id="baz">_</div>
  ------------------------------------------------------------------------------
  div<C-x><C-x><C-Space>                   <div />
  ------------------------------------------------------------------------------
  div.foo<C-x><C-x><C-Space>               <div className="foo" />
  ------------------------------------------------------------------------------
  div#bar#baz.foo<C-x><C-x><C-Space>       <div className="foo" id="bar baz" />
  ------------------------------------------------------------------------------

================================================================================
 2. MAPPINGS                                                  *zencoding-mappings*

You can define your own mappings for expansion. By default, `<C-x><C-Space>`
will expand regular tags, and `<C-x><C-x><C-Space>` will expand self-closing
tags.

If you want to disable the default mappings, simply set
`g:zencoding_disable_default_mappings` to 1 before loading the plugin.

>
    let g:zencoding_disable_default_mappings = 1
    " load plugin
    inoremap <silent> <C-x><C-Space> <C-r>=zencoding#expand(0)<CR>
    inoremap <silent> <C-x><C-x><C-Space> <C-r>=zencoding#expand(1)<CR>
<

vim:tw=78:ts=8:ft=help:norl:
